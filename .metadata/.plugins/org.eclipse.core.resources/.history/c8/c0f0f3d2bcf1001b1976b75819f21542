package com.team.roster.resources;

import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;

import com.team.roster.domain.ComposicaoTime;
import com.team.roster.services.ComposicaoTimeService;

import javassist.tools.rmi.ObjectNotFoundException;

public class ComposicaoTimeResource {

	@Autowired
	private ComposicaoTimeService service;

	@GetMapping // Listar integrantes
	public ResponseEntity<List<ComposicaoTime>> listAll() {
		List<ComposicaoTime> list = service.findAll();
		return ResponseEntity.ok().body(list);
	}

	@PostMapping // Criar integrantes
	@ResponseStatus(HttpStatus.CREATED)
	public ComposicaoTime adicionar(@RequestBody ComposicaoTime composicaoTime) {
		return service.save(composicaoTime);
	}

	@GetMapping(value = "/data")  //Listar integrante por birthDate
	public List<ComposicaoTime> findByName(@RequestParam("name") Date data) throws ObjectNotFoundException {
		return this.service.findByNomeConstains(data)
			.stream()
			.map(ComposicaoTime::converter).collect(Collectors.toList());
	}
}