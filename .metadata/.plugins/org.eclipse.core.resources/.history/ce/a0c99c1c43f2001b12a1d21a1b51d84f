package com.team.roster.domain;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

@Table(name = "integrante")
@Entity
public class Integrante implements Serializable {

	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	private String franquia;
	@Column(name = "integrante_nome")
	private String nome;
	private String funcao;
	
	@ManyToMany
	@JoinTable(name = "time_data")
	private List<Time> time = new ArrayList<>();
	
	@ManyToMany
	@JoinTable(name = "integrante_nome")
	private List<Integrante> integrantes = new ArrayList<>();

	
	public static Integrante converter(Integrante i) {
		var integrante = new Integrante();
		integrante.setId(i.getId());
		integrante.setFranquia(i.getFranquia());
		integrante.setNome(i.getNome());
		integrante.setFuncao(i.getFuncao());

		return integrante;
	}

	
	
	public Integrante() {
		super();
	}

	public Integrante(Long id, String franquia, String nome, String funcao) {
		super();
		this.id = id;
		this.franquia = franquia;
		this.nome = nome;
		this.funcao = funcao;
	}

	
	
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getFranquia() {
		return franquia;
	}

	public void setFranquia(String franquia) {
		this.franquia = franquia;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public String getFuncao() {
		return funcao;
	}

	public void setFuncao(String funcao) {
		this.funcao = funcao;
	}

	
	
	@Override
	public String toString() {
		return "Integrante [id=" + id + ", franquia=" + franquia + ", nome=" + nome + ", funcao=" + funcao + "]";
	}

	
	
	@Override
	public int hashCode() {
		return Objects.hash(id);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Integrante other = (Integrante) obj;
		return Objects.equals(id, other.id);
	}

}